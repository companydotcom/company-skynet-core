module.exports=function(e){var t={};function r(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,r),s.l=!0,s.exports}return r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(o,s,function(t){return e[t]}.bind(null,s));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=6)}([function(e,t,r){"use strict";r.r(t),r.d(t,"parseJson",(function(){return o})),r.d(t,"deepParseJson",(function(){return s})),r.d(t,"formatHttpResponse",(function(){return a})),r.d(t,"getErrorString",(function(){return n})),r.d(t,"neverThrowError",(function(){return i})),r.d(t,"sleep",(function(){return c})),r.d(t,"itemExists",(function(){return l})),r.d(t,"evaluateMadsReadAccess",(function(){return u})),r.d(t,"transformMadsToReadFormat",(function(){return d})),r.d(t,"findDuplicateMadsKeys",(function(){return p})),r.d(t,"filterMadsByReadAccess",(function(){return m}));const o=e=>{try{return JSON.parse(e)}catch(t){return e}},s=e=>{if("string"!=typeof e)return Array.isArray(e)?e.map(e=>s(e)):"object"==typeof e&&null!==e?Object.keys(e).reduce((t,r)=>(t[r]=s(e[r]),t),{}):e;if(!isNaN(Number(e)))return e;try{return s(JSON.parse(e))}catch(t){return e}},a=(e,t,r)=>{const o=(e=>{switch(e){case 200:return"OK";case 201:return"Created";case 400:return"Bad Request";case 500:return"Internal Server Error";default:return}})(e),s=`HTTP Resp: ${e}${o?" - "+o:""}`;let a={};return r instanceof Error?a.error=r.toString():"object"==typeof r?a=r:a.message=r,{statusCode:e,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Credentials":!0},body:JSON.stringify({resp:s,input:t,resultObj:a})}},n=e=>e instanceof Error?e.toString():"object"==typeof e?JSON.stringify(e,null,4):e,i=async(e,t)=>{const r={status:"pass",params:e};try{r.workerResp=await t(e)}catch(e){r.status="fail",r.error=n(e)}return r},c=async e=>new Promise(t=>setTimeout(()=>{t()},e)),l=(e,t)=>"object"==typeof e&&null!==e&&Object.prototype.hasOwnProperty.call(e,t),u=(e,t)=>{let r={};return Object.entries(e).forEach(([e,o])=>{if(Array.isArray(o)){const s=o.filter(e=>e.readAccess.includes(t)||e.readAccess.includes("*"));s.length&&(r[e]=s)}}),r},d=e=>{let t={};return Object.entries(e).forEach(([e,r])=>{if(Array.isArray(r)){const o=r.reduce((e,t)=>(e[t.key]=t.value,e),{});t[e]=o}}),t},p=e=>{let t;const r=e.reduce((e,t)=>(e[t.key]=e[t.key]>=0?e[t.key]+1:0,e),{});return Object.entries(r).forEach(([e,r])=>{r>0&&(t=e)}),t||null},m=e=>[e.filter(e=>0===e.readAccess.length),e.filter(e=>e.readAccess.length>0)]},function(e,t,r){var o=r(4),s=r(5),a=s;a.v1=o,a.v4=s,e.exports=a},function(e,t){var r="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(r){var o=new Uint8Array(16);e.exports=function(){return r(o),o}}else{var s=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),s[t]=e>>>((3&t)<<3)&255;return s}}},function(e,t){for(var r=[],o=0;o<256;++o)r[o]=(o+256).toString(16).substr(1);e.exports=function(e,t){var o=t||0,s=r;return[s[e[o++]],s[e[o++]],s[e[o++]],s[e[o++]],"-",s[e[o++]],s[e[o++]],"-",s[e[o++]],s[e[o++]],"-",s[e[o++]],s[e[o++]],"-",s[e[o++]],s[e[o++]],s[e[o++]],s[e[o++]],s[e[o++]],s[e[o++]]].join("")}},function(e,t,r){var o,s,a=r(2),n=r(3),i=0,c=0;e.exports=function(e,t,r){var l=t&&r||0,u=t||[],d=(e=e||{}).node||o,p=void 0!==e.clockseq?e.clockseq:s;if(null==d||null==p){var m=a();null==d&&(d=o=[1|m[0],m[1],m[2],m[3],m[4],m[5]]),null==p&&(p=s=16383&(m[6]<<8|m[7]))}var y=void 0!==e.msecs?e.msecs:(new Date).getTime(),g=void 0!==e.nsecs?e.nsecs:c+1,b=y-i+(g-c)/1e4;if(b<0&&void 0===e.clockseq&&(p=p+1&16383),(b<0||y>i)&&void 0===e.nsecs&&(g=0),g>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");i=y,c=g,s=p;var f=(1e4*(268435455&(y+=122192928e5))+g)%4294967296;u[l++]=f>>>24&255,u[l++]=f>>>16&255,u[l++]=f>>>8&255,u[l++]=255&f;var h=y/4294967296*1e4&268435455;u[l++]=h>>>8&255,u[l++]=255&h,u[l++]=h>>>24&15|16,u[l++]=h>>>16&255,u[l++]=p>>>8|128,u[l++]=255&p;for(var w=0;w<6;++w)u[l+w]=d[w];return t||n(u)}},function(e,t,r){var o=r(2),s=r(3);e.exports=function(e,t,r){var a=t&&r||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var n=(e=e||{}).random||(e.rng||o)();if(n[6]=15&n[6]|64,n[8]=63&n[8]|128,t)for(var i=0;i<16;++i)t[a+i]=n[i];return t||s(n)}},function(e,t,r){"use strict";r.r(t),r.d(t,"fetchHandler",(function(){return O})),r.d(t,"bulkFetchHandler",(function(){return E})),r.d(t,"directTransitionHandler",(function(){return A})),r.d(t,"bulkTransitionHandler",(function(){return D})),r.d(t,"webhookHandler",(function(){return R})),r.d(t,"setupDatabase",(function(){return x})),r.d(t,"httpReqHandler",(function(){return C}));var o=r(1),s=r(0);const a=async(e,t,r=!1)=>{const o=new e.DynamoDB({apiVersion:"2012-08-10"});Object(s.itemExists)(t,"Limit")||(t.Limit=1e3);try{const a=await o.query(t).promise();return!0===r?!Object(s.itemExists)(a,"Items")||a.Items.length<1?{items:[],ExclusiveStartKey:void 0}:{items:a.Items.map(t=>e.DynamoDB.Converter.unmarshall(t)),ExclusiveStartKey:Object(s.itemExists)(a,"LastEvaluatedKey")?a.LastEvaluatedKey:void 0}:!Object(s.itemExists)(a,"Items")||a.Items.length<1?[]:a.Items.map(t=>e.DynamoDB.Converter.unmarshall(t))}catch(e){throw e}},n=async(e,t,r,o,s)=>{const a={TableName:t,Key:r,UpdateExpression:`ADD ${o} :val`,ExpressionAttributeValues:{":val":s}};return(new e.DynamoDB.DocumentClient).update(a).promise()},i=async(e,t,r,o=1e3)=>{const a=new e.DynamoDB({apiVersion:"2012-08-10"}),n=t.map(t=>({PutRequest:{Item:e.DynamoDB.Converter.marshall(t)}})),c=[];for(;n.length>0;)c.push(a.batchWriteItem({RequestItems:{[r]:n.splice(0,25)}}).promise());console.log(`DYNAMODB SERVICE: batchPutIntoDynamoDb: totalBulkRequestsSent: ${c.length} with each request having 25 records except the last one having ${t.length-25*(c.length-1)} records`);try{const t=(await Promise.all(c)).map(t=>Object(s.itemExists)(t,"UnprocessedItems")&&Object(s.itemExists)(t.UnprocessedItems,r)&&t.UnprocessedItems[r].length>0?t.UnprocessedItems[r].map(t=>e.DynamoDB.Converter.unmarshall(t.PutRequest.Item)):[]).reduce((e,t)=>e.concat(t));return!(t.length>0)||(await Object(s.sleep)(o),i(e,t,r,o+1e3))}catch(e){throw e}},c=e=>{if((e=>"string"==typeof e)(e))return"String";if((e=>"number"==typeof e)(e))return"Number";if((e=>Array.isArray(e))(e))return"String.Array";throw new Error(`Invalid MessageAttribute type: ${typeof e} for value ${e}. Valid types: String, Number, Array.`)},l=e=>Object.keys(e).reduce((t,r)=>{const o=e[r];if(void 0===o)return t;const s=c(o);return{...t,[r]:{DataType:s,StringValue:"String.Array"===s?JSON.stringify(o):o.toString()}}},{});var u=async(e,t,r,o={},s={})=>{const a=new e.SNS({apiVersion:"2010-03-31"});let n;try{const e={Message:JSON.stringify(r),TopicArn:t,MessageAttributes:l(o),...s};return n=await a.publish(e).promise(),console.log("SNS Publish - Success: ",JSON.stringify(e)),n}catch(e){return console.log("SNS Publish - Failure: ",e.toString()),e}};const{deepParseJson:d}=r(0),p=e=>{let t=e.Body?e.Body:e.body,r={};try{t=e.Body?d(e.Body):d(e.body)}catch(e){throw console.log("Error: withSqsConsumer - parseMsg: Did not get a JSON parsable message in body"),e}var o;return void 0!==t.MessageAttributes&&(o=t.MessageAttributes,r=Object.keys(o).reduce((e,t)=>{const{Type:r,Value:s}=o[t];return"String"!==r&&"Number"!==r?{...e,[t]:JSON.parse(s)}:{...e,[t]:s}},{})),{msgBody:t.Message,msgAttribs:r,rcptHandle:e.ReceiptHandle}},m=async(e,t,r,o)=>{console.log("Fetching messages from SQS URL: "+o);const s=new e.SQS({region:t});let a=[];const n=[];let i=r<500?r:500;for(;i>0;){const e=i<10?i:10;i-=e,n.push(s.receiveMessage({QueueUrl:o,MaxNumberOfMessages:e,VisibilityTimeout:900}).promise())}return(await Promise.all(n)).forEach(e=>{void 0!==e.Messages&&e.Messages.length>0&&(a=[...a,...e.Messages])}),a},y=async(e,t)=>(await a(e,{TableName:"Account",ExpressionAttributeNames:{"#pk":"accountId"},KeyConditionExpression:"#pk = :accId",ExpressionAttributeValues:{":accId":{S:t}}}))[0],g=async(e,t)=>(await a(e,{TableName:"User",ExpressionAttributeNames:{"#pk":"userId"},KeyConditionExpression:"#pk = :uId",ExpressionAttributeValues:{":uId":{S:t}}}))[0],b=async(e,t)=>(await a(e,{TableName:"internal-account-mads",ExpressionAttributeNames:{"#pk":"accountId"},KeyConditionExpression:"#pk = :accId",ExpressionAttributeValues:{":accId":{S:t}}}))[0],f=async(e,t)=>(await a(e,{TableName:"internal-user-mads",ExpressionAttributeNames:{"#pk":"userId"},KeyConditionExpression:"#pk = :uId",ExpressionAttributeValues:{":uId":{S:t}}}))[0],h=async(e,t,r,n,{msgBody:c,msgAttribs:l,rcptHandle:d},p)=>{const m=await a(e,{TableName:"vendorConfig",ExpressionAttributeNames:{"#pk":"service"},KeyConditionExpression:"#pk = :serv",ExpressionAttributeValues:{":serv":{S:r}}});let h,w,v,O;Object(s.itemExists)(c,"context")&&Object(s.itemExists)(c.context,"user")&&Object(s.itemExists)(c.context.user,"userId")&&Object(s.itemExists)(c.context.user,"accountId")&&([h,w,v,O]=await Promise.all([y(e,c.context.user.accountId),g(e,c.context.user.userId),b(e,c.context.user.accountId),f(e,c.context.user.userId)]));let E={};Object(s.itemExists)(c,"context")&&(Object(s.itemExists)(h,"vendorData")&&Object(s.itemExists)(h.vendorData,r)&&(E=h.vendorData[r]),Object(s.itemExists)(c.context,"account")||(c.context.account=h));let A={};Object(s.itemExists)(c,"context")&&Object(s.itemExists)(w,"vendorData")&&Object(s.itemExists)(w.vendorData,r)&&(A=w.vendorData[r]);let D={},R={};Object(s.itemExists)(c,"context")&&(Object(s.itemExists)(c.context,"account")||(c.context.account=h),Object(s.itemExists)(h,"globalMicroAppData")&&(D.account=Object(s.transformMadsToReadFormat)(Object(s.evaluateMadsReadAccess)(h.globalMicroAppData,r))),Object(s.itemExists)(w,"globalMicroAppData")&&(D.user=Object(s.transformMadsToReadFormat)(Object(s.evaluateMadsReadAccess)(w.globalMicroAppData,r))),Object(s.itemExists)(O,r)&&(R.user=Object(s.transformMadsToReadFormat)(O[r])),Object(s.itemExists)(v,r)&&(R.account=Object(s.transformMadsToReadFormat)(v[r])));const x=await Object(s.neverThrowError)({message:c,serviceConfigData:void 0!==m&&Array.isArray(m)&&m.length>0&&void 0!==m[0].configdata?m[0].configdata:[],serviceAccountData:E,serviceUserData:A,globalMicroAppData:D,internalMicroAppData:R,attributes:l},p);if(console.log("processMessage: INFO: Result from worker is "+JSON.stringify(x,null,4)),Object(s.itemExists)(x.workerResp,"serviceAccountData")){if("object"!=typeof x.workerResp.serviceAccountData)throw new Error("Service specific user account data should be an object");console.log("Deprecation warning: serviceAccountData is being deprecated soon, please use microAppData instead."),console.log("See docs for more info: https://bit.ly/3kdY2w9"),Object(s.itemExists)(h,"vendorData")||(h.vendorData={}),Object(s.itemExists)(h.vendorData,r)||(h.vendorData[r]={}),h.vendorData[r]={...h.vendorData[r],...x.workerResp.serviceAccountData},await i(e,[h],"Account")}if(Object(s.itemExists)(x.workerResp,"serviceUserData")){if("object"!=typeof x.workerResp.serviceUserData)throw new Error("Service specific user data should be an object");console.log("Deprecation warning: serviceUserData is being deprecated soon, please use microAppData instead."),console.log("See docs for more info: https://bit.ly/3kdY2w9"),Object(s.itemExists)(w,"vendorData")||(w.vendorData={}),Object(s.itemExists)(w.vendorData,r)||(w.vendorData[r]={}),w.vendorData[r]={...w.vendorData[r],...x.workerResp.serviceUserData},await i(e,[w],"User")}if(Object(s.itemExists)(w,"globalMicroAppData")||(w.globalMicroAppData={}),Object(s.itemExists)(h,"globalMicroAppData")||(h.globalMicroAppData={}),Object(s.itemExists)(w.globalMicroAppData,r)||(w.globalMicroAppData[r]=[]),Object(s.itemExists)(h.globalMicroAppData,r)||(h.globalMicroAppData[r]=[]),O||(O={userId:c.context.user.userId}),Object(s.itemExists)(O,r)||(O[r]=[]),v||(v={accountId:c.context.user.accountId}),Object(s.itemExists)(v,r)||(v[r]=[]),Object(s.itemExists)(x.workerResp,"microAppData")&&Object(s.itemExists)(x.workerResp.microAppData,"user")){const{user:t}=x.workerResp.microAppData;if(console.log("userMads: ",t),!Array.isArray(t))throw new Error("Worker response in user microAppData must be of type Array.");t.forEach(e=>{if(!Object(s.itemExists)(e,"key")||!Object(s.itemExists)(e,"value")||!Object(s.itemExists)(e,"readAccess"))throw new Error("Missing a required key (key, value, or readAccess) in a user microAppData item.")});const o=Object(s.findDuplicateMadsKeys)(t);if(o)throw new Error(`Key: ${o} in user microAppData array is not unique. All keys in the microAppData arrays must be unique.`);const[a,n]=Object(s.filterMadsByReadAccess)(t);console.log("internal mads: ",a),console.log("global mads: ",n),w.globalMicroAppData[r]=n,O[r]=a,console.log("writing to dynamo"),await i(e,[w],"User"),await i(e,[O],"internal-user-mads")}if(Object(s.itemExists)(x.workerResp,"microAppData")&&Object(s.itemExists)(x.workerResp.microAppData,"account")){const{account:t}=x.workerResp.microAppData;if(console.log("accountMads: ",t),!Array.isArray(t))throw new Error("Worker response in account microAppData must be of type Array.");t.forEach(e=>{if(!Object(s.itemExists)(e,"key")||!Object(s.itemExists)(e,"value")||!Object(s.itemExists)(e,"readAccess"))throw new Error("Missing a required key (key, value, or readAccess) in a account microAppData item.")});const o=Object(s.findDuplicateMadsKeys)(t);if(o)throw new Error(`Key: ${o} in account microAppData array is not unique. All keys in the microAppData arrays must be unique.`);const[a,n]=Object(s.filterMadsByReadAccess)(t);console.log("internal mads: ",a),console.log("global mads: ",n),h.globalMicroAppData[r]=n,v[r]=a,console.log("writing to dynamo"),await i(e,[h],"Account"),await i(e,[v],"internal-account-mads")}if(Object(s.itemExists)(x.workerResp,"crmData")){if("object"!=typeof x.workerResp.crmData)throw new Error("Data going to a CRM should be an object");Object.keys(x.workerResp.crmData).length>0&&await u(e,`arn:aws:sns:${t}:${n}:event-bus`,{...c,payload:x.workerResp.crmData,metadata:{eventType:"sendFields",dateCreated:Date.now(),operationType:"update",invocationSource:r}},{...l,status:"trigger",eventType:"crm",eventId:Object(o.v4)(),emitter:r})}let C;C=Object.prototype.hasOwnProperty.call(x,"workerResp")?Object.prototype.hasOwnProperty.call(x.workerResp,"res")?x.workerResp.res:x.workerResp:void 0;return await u(e,`arn:aws:sns:${t}:${n}:event-bus`,{...c,inputPayload:c.payload,payload:C},{...l,status:(e=>{let t=e.status;return Object.prototype.hasOwnProperty.call(e,"workerResp")&&Object.prototype.hasOwnProperty.call(e.workerResp,"extraStatus")&&(t=`${t}-${e.workerResp.extraStatus}`),t})(x),eventId:Object(o.v4)(),emitter:r}),void 0!==d&&await(async(e,t,r,o)=>{new e.SQS({region:t}).deleteMessage({QueueUrl:r,ReceiptHandle:o}).promise()})(e,t,"transition"===l.eventType?`https://sqs.${t}.amazonaws.com/${n}/${r}-bulktq`:`https://sqs.${t}.amazonaws.com/${n}/${r}-bulkfq`,d),"fail"===x.status&&(async(e,t,r,o)=>{new e.SQS({region:t}).sendMessage({QueueUrl:r,MessageBody:o}).promise()})(e,t,`https://sqs.${t}.amazonaws.com/${n}/${r}-ldlq`,JSON.stringify({failedIn:r,body:{Message:c,MessageAttributes:l,Error:x.error}})),!0},w=async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:n},i,c=!0,l=0)=>{if(l>n)return 0;l>0&&await Object(s.sleep)(1e3);const u=JSON.parse(t);if(void 0===u.day&&void 0===u.hour&&void 0===u.minute&&void 0===u.second)return 1e6;const d=!0===c?(1-o)*r:1*r,p=await(async(e,t)=>{const r=Date.now(),o=Math.floor(r/1e3)+1,s=o-o%60+60,n=s-s%3600+3600,i=n-n%86400+86400,c={TableName:"apiCallCount",ExpressionAttributeNames:{"#pk":"serviceAndDuration","#et":"expiryTime"},KeyConditionExpression:"#pk = :sd AND #et = :et"},l=[a(e,{...c,ExpressionAttributeValues:{":sd":{S:t+"-second"},":et":{N:o.toString()}}}),a(e,{...c,ExpressionAttributeValues:{":sd":{S:t+"-minute"},":et":{N:s.toString()}}}),a(e,{...c,ExpressionAttributeValues:{":sd":{S:t+"-hour"},":et":{N:n.toString()}}}),a(e,{...c,ExpressionAttributeValues:{":sd":{S:t+"-day"},":et":{N:i.toString()}}})],u=await Promise.all(l);return{second:u[0].callCount?u[0].callCount:0,minute:u[1].callCount?u[1].callCount:0,hour:u[2].callCount?u[2].callCount:0,day:u[3].callCount?u[3].callCount:0}})(e,i);let m="x";return void 0!==u.day&&(Math.floor(u.day*d-p.day)<m||"x"===m)&&(m=Math.floor((u.day-p.day)*d)),void 0!==u.hour&&(Math.floor(u.hour*d-p.hour)<m||"x"===m)&&(m=Math.floor((u.hour-p.hour)*d)),void 0!==u.minute&&(Math.floor(u.minute*d-p.minute)<m||"x"===m)&&(m=Math.floor((u.minute-p.minute)*d)),void 0!==u.second&&(Math.floor(u.second*d-p.second)<m||"x"===m)&&(m=Math.floor((u.second-p.second)*d)),m>0?m:w(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:n},i,c,l+1)},v=async(e,t,r=1)=>{const o=Date.now(),s=Math.floor(o/1e3)+1,a=s-s%60+60,i=a-a%3600+3600,c=i-i%86400+86400,l=[n(e,"apiCallCount",{serviceAndDuration:t+"-second",expiryTime:s},"callCount",r),n(e,"apiCallCount",{serviceAndDuration:t+"-minute",expiryTime:a},"callCount",r),n(e,"apiCallCount",{serviceAndDuration:t+"-hour",expiryTime:i},"callCount",r),n(e,"apiCallCount",{serviceAndDuration:t+"-day",expiryTime:c},"callCount",r)];return await Promise.all(l),!0},O=async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d)=>(async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d)=>{try{if(console.log("directFetch: INFO: Input is: "+("object"==typeof l?JSON.stringify(l,null,4):l)),void 0===l.Records||1!==l.Records.length)throw new Error(`directFetch: ERROR: Lambda was wrongly triggered with ${void 0===l.Records?0:l.Records.length} records`);const s=await w(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},i,!1);console.log("directFetch: INFO: Processing event "+JSON.stringify(l.Records.length,null,4));let m=[p(l.Records[0])];if(d&&(m=await d("fetch",!1,m)),!m.length)throw new Error("directFetch: ERROR: Processing complete.  Pre-worker hook rejected message.");if(s<1)throw new Error("directFetch: ERROR: No capacity to make a call");await v(e,i);const{msgBody:y,msgAttribs:g}=m[0];return await h(e,n,i,c,{msgBody:y,msgAttribs:g},u),"directFetch: INFO: Processing complete"}catch(e){throw console.log("directFetch: ERROR: "+Object(s.getErrorString)(e)),e}})(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d),E=async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d)=>(async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d)=>{try{console.log("bulkFetch: INFO: Scheduled call started. Event is "+("object"==typeof l?JSON.stringify(l,null,4):l));const s=await w(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},i,!0);if(s<1)throw new Error("bulkFetch: ERROR: No capacity to make a call");const y=await m(e,n,s,`https://sqs.${n}.amazonaws.com/${c}/${i}-bulkfq`);console.log("bulkFetch: INFO: Processing event "+JSON.stringify(y.length,null,4));let g=y.map(e=>p(e));if(d&&(g=await d("fetch",!0,g)),g.length<1)return"bulkFetch: INFO: Processing complete";await v(e,i,y.length);const b=[];return g.forEach(t=>{b.push(h(e,n,i,c,t,u))}),await Promise.all(b),"bulkFetch: INFO: Processing complete"}catch(e){throw console.log("bulkFetch: ERROR: "+Object(s.getErrorString)(e)),e}})(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d),A=async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d)=>(async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d)=>{try{if(console.log("directTransition: INFO: Input is: "+("object"==typeof l?JSON.stringify(l,null,4):l)),void 0===l.Records||1!==l.Records.length)throw new Error(`directTransition: ERROR: Lambda was wrongly triggered with ${void 0===l.Records?0:l.Records.length} records`);const s=await w(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},i,!1);console.log("directTransition: INFO: Processing event "+JSON.stringify(l.Records.length,null,4));let m=[p(l.Records[0])];if(d&&(m=await d("fetch",!1,m)),!m.length)throw new Error("directFetch: ERROR: Processing complete.  Pre-worker hook rejected message.");if(s<1)throw new Error("directTransition: ERROR: No capacity to make a call");await v(e,i);const{msgBody:y,msgAttribs:g}=m[0];return await h(e,n,i,c,{msgBody:y,msgAttribs:g},u),"directTransition: INFO: Processing complete"}catch(e){throw console.log("directTransition: ERROR: "+Object(s.getErrorString)(e)),e}})(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d),D=async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d)=>(async(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d)=>{try{console.log("bulkTransition: INFO: Scheduled call started. Event is "+("object"==typeof l?JSON.stringify(l,null,4):l));const s=await w(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},i,!0);if(s<1)throw new Error("bulkTransition: ERROR: No capacity to make a call");const y=await m(e,n,s,`https://sqs.${n}.amazonaws.com/${c}/${i}-bulktq`);console.log("bulkTransition: INFO: Processing event "+JSON.stringify(y.length,null,4));let g=y.map(e=>p(e));if(d&&(g=await d("transition",!0,g)),g.length<1)return"bulkTransition: INFO: Processing complete";await v(e,i,g.length);const b=[];return g.forEach(t=>{b.push(h(e,n,i,c,t,u))}),await Promise.all(b),"bulkTransition: INFO: Processing complete"}catch(e){throw console.log("bulkTransition: ERROR: "+Object(s.getErrorString)(e)),e}})(e,{throttleLmts:t,safeThrottleLimit:r,reserveCapForDirect:o,retryCntForCapacity:a},n,i,c,l,u,d),R=async(e,t,r,o,a,n,i)=>(async(e,t,r,o,a,n,i)=>{try{if(console.log("directTransition: INFO: Input is: "+("object"==typeof a?JSON.stringify(a,null,4):a)),void 0===a.Records||1!==a.Records.length)throw new Error(`directTransition: ERROR: Lambda was wrongly triggered with ${void 0===a.Records?0:a.Records.length} records`);console.log("webhook: INFO: Processing event "+JSON.stringify(a.Records.length,null,4));let s=[p(a.Records[0])];if(i&&(s=await i("webhook",!1,s)),!s.length)throw new Error("directFetch: ERROR: Processing complete.  Pre-worker hook rejected message.");const{msgBody:c,msgAttribs:l}=s[0];return await h(e,t,r,o,{msgBody:c,msgAttribs:l},n),"directTransition: INFO: Processing complete"}catch(e){throw console.log("directTransition: ERROR: "+Object(s.getErrorString)(e)),e}})(e,t,r,o,a,n,i),x=async(e,t,r)=>{let o="";if("object"==typeof t)o=t;else try{o=JSON.parse(t)}catch(e){return void console.log("Unable to parse the database file. Please check if it is a valid JSON document.")}return(async(e,t,r)=>{try{const o={service:r,configdata:t};return console.log("Data being sent "+JSON.stringify([o],null,4)),await i(e,[o],"vendorConfig"),console.log("Database has been setup successfully"),"Database has been setup successfully"}catch(e){throw console.log("bulkTransition: ERROR: "+Object(s.getErrorString)(e)),e}})(e,o,r)},C=async(e,t,r,a,n,i)=>(async(e,t,r,a,n,i)=>{try{console.log("getpostHttp: INFO: Input is: "+("object"==typeof i?JSON.stringify(i,null,4):i));const s="object"==typeof i?i:JSON.parse(i),c=s.body,l=s.pathParameters,d="undefined"!==s.queryStringParameters?s.queryStringParameters:{};return await u(e,`arn:aws:sns:${t}:${a}:event-bus`,{payload:{...l,...c,...d},context:null,metadata:{eventType:l.eventType}},{status:"trigger",operation:"fetch"===l.operation?"R":"C",entity:"product",entityId:n,eventId:Object(o.v4)(),emitter:r,eventType:l.operation}),{statusCode:200,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Credentials":!0},body:JSON.stringify({status:"getpostHttp: INFO: Request accepted and queued",input:i})}}catch(e){return console.log("getpostHttp: ERROR: "+Object(s.getErrorString)(e)),{statusCode:500,headers:{"Access-Control-Allow-Origin":"*","Access-Control-Allow-Credentials":!0},body:JSON.stringify({status:`getpostHttp: ERROR: We encountered an error. Please quote TS${Date.now()} as reference id for further assistance`,input:i})}}})(e,t,r,a,n,i)}]);